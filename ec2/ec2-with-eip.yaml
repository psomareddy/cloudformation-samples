AWSTemplateFormatVersion: "2010-09-09"
Description:
  "Create EC2 instance in the VPC subnet created by the vpc stack"
Parameters:
  CustomerName:
    Description: Enter the name of your customer with no spaces.
    Type: String
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.small
    AllowedValues:
      [
        t2.nano,
        t2.micro,
        t2.small,
        t2.medium,
        t2.large,
        t2.xlarge,
        t2.2xlarge,
        t3.nano,
        t3.micro,
        t3.small,
        t3.medium,
        t3.large,
        t3.xlarge,
        t3.2xlarge,
        m4.large,
        m4.xlarge,
        m4.2xlarge,
        m4.4xlarge,
        m4.10xlarge,
        m5.large,
        m5.xlarge,
        m5.2xlarge,
        m5.4xlarge,
        c5.large,
        c5.xlarge,
        c5.2xlarge,
        c5.4xlarge,
        c5.9xlarge,
        g3.8xlarge,
        r5.large,
        r5.xlarge,
        r5.2xlarge,
        r5.4xlarge,
        r3.12xlarge,
        i3.xlarge,
        i3.2xlarge,
        i3.4xlarge,
        i3.8xlarge,
        d2.xlarge,
        d2.2xlarge,
        d2.4xlarge,
        d2.8xlarge,
      ]
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  AmiId:
    Type: String
    Default: ami-020b9db557781b212
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      UserData: !Base64
        Fn::Join:
          - ""
          - [IPAddress=, !Ref "IPAddress"]
      InstanceType: !Ref "InstanceType"
      SubnetId: !ImportValue 
                  Fn::Join: ["-", [!Ref CustomerName, "Subnet1", "Id"]]
      SecurityGroupIds: 
        - !ImportValue 
                  Fn::Join: ["-", [!Ref CustomerName, "SSHSecurityGroup", "Id"]]
      KeyName: !Ref "KeyName"
      ImageId: !Ref "AmiId"
      Tags:
        - Key: Application
          Value: Web Server
        - Key: Domain
          Value: None
        - Key: Environment
          Value: Test
        - Key: LifeTime
          Value: Transient
        - Key: Name
          Value: ubi
        - Key: OS
          Value: Linux
        - Key: OwnerContact
          Value: "@preddy"
        - Key: Purpose
          Value: Test Worker
        - Key: Source
          Value: CloudFormation Script
  IPAddress:
    Type: AWS::EC2::EIP
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref "EC2Instance"
      EIP: !Ref "IPAddress"
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref "EC2Instance"
  InstanceIPAddress:
    Description: IP address of the newly created EC2 instance
    Value: !Ref "IPAddress"
  PublicIp:
    Value:
      Fn::GetAtt:
        - EC2Instance
        - PublicIp
    Description: Server's PublicIp Address
